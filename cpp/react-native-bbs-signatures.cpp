// Here we implement our methods that are generated by tscodegen.
// Every function gets the JSI runtime. For most methods we do not
// need this.

#include "react-native-bbs-signatures.h"
#include "TypedArray.h"
#include "bbs.h"

using namespace facebook;
using namespace react;

NativeBbsSignatures::NativeBbsSignatures(std::shared_ptr<CallInvoker> jsInvoker)
    : BbsSignaturesCxxSpecJSI(jsInvoker){};

jsi::Object NativeBbsSignatures::sign(jsi::Runtime &rt, const jsi::Object &options) {}

jsi::Object NativeBbsSignatures::blsSign(jsi::Runtime &rt, const jsi::Object &options) {}

jsi::Object NativeBbsSignatures::verify(jsi::Runtime &rt, const jsi::Object &options) {}

jsi::Object NativeBbsSignatures::blsVerify(jsi::Runtime &rt, const jsi::Object &options) {}

jsi::Object NativeBbsSignatures::createProof(jsi::Runtime &rt, const jsi::Object &options) {}

jsi::Object NativeBbsSignatures::blsCreateProof(jsi::Runtime &rt, const jsi::Object &options) {}

jsi::Object NativeBbsSignatures::verifyProof(jsi::Runtime &rt, const jsi::Object &options) {}

jsi::Object NativeBbsSignatures::blsVerifyProof(jsi::Runtime &rt, const jsi::Object &options) {}

jsi::Object NativeBbsSignatures::commitmentForBlindSignRequest(jsi::Runtime &rt, const jsi::Object &options) {}

jsi::Object NativeBbsSignatures::verifyBlindSignRequest(jsi::Runtime &rt, const jsi::Object &options) {}

jsi::Object NativeBbsSignatures::blindSign(jsi::Runtime &rt, const jsi::Object &options) {}

jsi::Object NativeBbsSignatures::generateBls12381G1KeyPair(jsi::Runtime &rt, const jsi::Object &options) {}

jsi::Object NativeBbsSignatures::generateBlindedBls12381G1KeyPair(jsi::Runtime &rt, const jsi::Object &options) {}

jsi::Object NativeBbsSignatures::generateBls12381G2KeyPair(jsi::Runtime &rt, const jsi::Object &options) {}

jsi::Object NativeBbsSignatures::generateBlindedBls12381G2KeyPair(jsi::Runtime &rt, const jsi::Object &options) {}

jsi::Object NativeBbsSignatures::bl12381toBbs(jsi::Runtime &rt, const jsi::Object &options) {}
